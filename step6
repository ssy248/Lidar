# STEP 6 
# step: track multiple vehicles 
# each frame is a diff color 

# idea: skip 10 frames for each update 

n = 3

arrayx = []

arrayy = []

tarray = []

currentindices=[]

firstrow=0

firstrowfirstfile= 0

firstrowscan=0

obnum =0



finalarray=[]

xvalues = []
yvalues = []

hxvalues =[]
hyvalues= []

prevmap={}

# initial cluster to track 
initialcluster = 2


# must intialize matchfreq
mf = defaultdict(list)

mx = 11

for j in range(0, mx):
    mf[j]=0 

matchfreq= mf

initialframe=2



# first check all the initial frame indices

maxclusterid=0

# another for loop for different initial frames 
name1 = "Cluster_Frame"+str(initialframe)+".csv"
pname1 = path+"/"+name1
with open(pname1) as csv_file1:
    
    csv_reader1 = csv.reader(csv_file1, delimiter=",")
    
    for row1 in csv_reader1:
        if firstrowscan==0:
            firstrowscan=1
            continue
        clusterid1 = float(row1[0])
        vehped1 = float(row1[1])
        if vehped1==1:
            if clusterid1> maxclusterid:
                maxclusterid = clusterid1
# end of setting maxclusterid

print("maxclusterid", maxclusterid)

maxclusterid = int(maxclusterid)

for category in range(0, maxclusterid):

    finalxvalues =[]
    finalyvalues =[]
    
    hxvalues =[]
    hyvalues= []
    
    firstrowfirstfile = 0
    
    for i in range(initialframe, n):
        print("i is ",i)
        name = "Cluster_Frame"
        name = name+str(i)
        name = name+".csv"
        print(name)
        pathname = path+"/"+name

        firstrow=0

        row1 = 0

        # clear matchfreq
        for j in range(0, mx):
            matchfreq[j] =0


        with open(pathname) as csv_file:
            f =0
            currentmap= {}
            csv_reader = csv.reader(csv_file, delimiter=",")

            if i==initialframe:
                #print("i",i)
                for row in csv_reader:
                    # skip label or first row
                    if firstrowfirstfile==0:
                        firstrowfirstfile=1
                        continue
                    
                    clusterid = float(row[0])
                    vehped = float(row[1])
                    #print("clusterid", clusterid)
                    if clusterid==category and vehped==1:
                        xpoint = float(row[2])
                        ypoint = float(row[3])
                        finalxvalues.append(xpoint)
                        finalyvalues.append(ypoint)
                        #print("xpoint", xpoint)
                        #print("ypoint", ypoint)
                        xfloor = math.floor(xpoint)
                        yfloor = math.floor(ypoint)
                        fromi = invlookupdict[(xfloor,yfloor)]
                        h1, i1 = highestfreq(fromi)
                        prevmap[i1] = 1 # save
                # added to array for final scatter plot of this category
            for row in csv_reader:
                if firstrow==0:
                    firstrow=1
                    continue
                    
                vehped = float(row[1])
                if vehped==2:
                    continue
                clusterid = float(row[0])
                
                if clusterid != obnum:
                    numo1 = float(obnum)
                    if matchfreq[numo1] > f:
                        f= matchfreq[numo1]
                        ky = numo1
                        hxvalues = xvalues
                        hyvalues = yvalues
                    # new comparisons
                    obnum = clusterid
                    currentindices=[]
                    currentmap={}
                    xvalues=[]
                    yvalues=[]
                    continue
                xpoint= float(row[2])
                ypoint= float(row[3])
                xfloor= math.floor(xpoint)
                yfloor= math.floor(ypoint)
                xvalues.append(xpoint)
                yvalues.append(ypoint)
                fromi = invlookupdict[(xfloor, yfloor)]
                h1, i1 = highestfreq(fromi)
                currentindices.append(i1)
                currentmap[i1] = 1
                # now check prev map to see if they match
                val = prevmap.get(i1)
                if val==None:
                    # search2
                    print()
                else:
                    # add to freq
                    numo = float(obnum)
                    matchfreq[numo] = matchfreq[numo]+1
            # add to final index set
            finalxvalues.extend(hxvalues)
            finalyvalues.extend(hyvalues)
            prevmap = totalmap[ky]
            
    # scatter plot at the end of category pass 
    plt.scatter(finalxvalues, finalyvalues)
                

plt.show()


